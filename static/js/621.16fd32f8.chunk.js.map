{"version":3,"file":"static/js/621.16fd32f8.chunk.js","mappings":"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","sources":["components/reviews/Reviews.styled.js","components/reviews/Reviews.jsx","services/ApiRequests.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewItem = styled.li`\n  border-radius: 5px;\n  padding: 15px;\n  margin: 30px;\n  background-color: rgb(35, 8, 66);\n`;\n","import { nanoid } from 'nanoid';\nimport PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieReviews } from '../../services/ApiRequests';\n\nimport { ReviewItem } from './Reviews.styled';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const { id } = useParams();\n  useEffect(() => {\n    getMovieReviews(id)\n      .then(data => {\n        setReviews(data.results);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, [id]);\n  return (\n    <ul>\n      {reviews.map(review => {\n        const id = nanoid();\n        return (\n          <ReviewItem key={id}>\n            <h3>Author: {review.author}</h3>\n            <p>{review.content}</p>\n          </ReviewItem>\n        );\n      })}\n    </ul>\n  );\n}\n\nReviews.propTypes = {\n  reviews: PropTypes.array,\n  id: PropTypes.number,\n  getMovieReviews: PropTypes.func,\n};\n","import axios from 'axios';\n\nconst API_KEY = '7968ad8b74212fdec970c8532d70f000';\nconst API_URL = 'https://api.themoviedb.org/3';\n\nconst fetchData = async option => {\n  try {\n    const response = await axios.get(`${API_URL}${option}api_key=${API_KEY}`);\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.log(error.message);\n    throw error;\n  }\n};\n\nconst getData = async option => {\n  try {\n    const data = await fetchData(option);\n    return data;\n  } catch (error) {\n    console.log(error.message);\n    throw error;\n  }\n};\n\nexport const getTrending = () => {\n  const getTrendingURL = '/trending/movie/day?';\n  return getData(getTrendingURL);\n};\n\nexport const searchMovie = movie => {\n  const searchMovieURL = `/search/movie?query=${movie}&`;\n  return getData(searchMovieURL);\n};\n\nexport const getMovieDetails = id => {\n  const getMovieDetailsURL = `/movie/${id}?`;\n  return getData(getMovieDetailsURL);\n};\n\nexport const getMovieCredits = id => {\n  const getMovieCreditsURL = `/movie/${id}/credits?`;\n  return getData(getMovieCreditsURL);\n};\n\nexport const getMovieReviews = id => {\n  const getMovieReviewsURL = `/movie/${id}/reviews?`;\n  return getData(getMovieReviewsURL);\n};\n\nexport const getFullPosterURL = posterPath => {\n  if (!posterPath) {\n    return;\n  }\n  try {\n    const response = `https://image.tmdb.org/t/p/w500${posterPath}`;\n    return response;\n  } catch (error) {\n    return error(error.message);\n  }\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["ReviewItem","styled","_templateObject","_taggedTemplateLiteral","Reviews","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","id","useParams","useEffect","getMovieReviews","then","data","results","catch","error","console","_jsx","children","map","review","nanoid","_jsxs","author","content","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","option","response","_context","prev","next","axios","concat","sent","abrupt","t0","log","message","stop","_x","apply","arguments","getData","_ref2","_callee2","_context2","_x2","getTrending","searchMovie","movie","searchMovieURL","getMovieDetails","getMovieDetailsURL","getMovieCredits","getMovieCreditsURL","getMovieReviewsURL","getFullPosterURL","posterPath","size","length","undefined","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}