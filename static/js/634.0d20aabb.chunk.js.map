{"version":3,"file":"static/js/634.0d20aabb.chunk.js","mappings":"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","sources":["components/loader/Loader.jsx","components/movie-details/MovieDetails.styled.js","pages/MovieDetails.jsx","services/ApiRequests.js"],"sourcesContent":["import { RevolvingDot } from 'react-loader-spinner';\n\nexport default function Loader() {\n  return (\n    <RevolvingDot\n      radius=\"45\"\n      strokeWidth=\"5\"\n      color=\"orange\"\n      secondaryColor=\"rgb(35, 8, 66)\"\n      ariaLabel=\"revolving-dot-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n      visible={true}\n    />\n  );\n}\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const BackLink = ({ to, children }) => {\n  return <BackStyledLink to={to}>{children}</BackStyledLink>;\n};\n\nconst BackStyledLink = styled(Link)`\n  font-size: 13px;\n  padding: 10px;\n  border-radius: 10px;\n  background-color: orange;\n  &:hover {\n    background-color: rgb(255, 119, 0);\n  }\n`;\n\nexport const MovieDetailsBox = styled.div`\n  display: flex;\n  width: 800px;\n  & > div > img {\n    margin-top: 20px;\n    width: 300px;\n    height: 400px;\n  }\n`;\n\nexport const InfoLink = ({ to, children }) => {\n  return <InfoStyledLink to={to}>{children}</InfoStyledLink>;\n};\n\nconst InfoStyledLink = styled(Link)`\n  width: 70px;\n  margin-top: 15px;\n  padding: 10px;\n  border-radius: 10px;\n  text-decoration: none;\n  text-align: center;\n  &.active {\n    background-color: orange;\n  }\n`;\n\nexport const AdditionalInformationBox = styled.div`\n  display: flex;\n  gap: 50px;\n`;\n","import PropTypes from 'prop-types';\nimport { Suspense, useEffect, useState } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\n\nimport Loader from '../components/loader/Loader';\nimport { getMovieDetails, getFullPosterURL } from '../services/ApiRequests';\n\nimport {\n  BackLink,\n  MovieDetailsBox,\n  InfoLink,\n  AdditionalInformationBox,\n} from '../components/movie-details/MovieDetails.styled.js';\n\nexport default function MovieDetails() {\n  const [movie, setMovie] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const { id } = useParams();\n  const locationURL = useLocation();\n  const votePercentage = (movie.vote_average * 10).toFixed(0) + '%';\n\n  const backLinkHref = () => {\n    console.log(id);\n    console.log(locationURL.state);\n    if (locationURL.state?.from) {\n      return locationURL.state.from;\n    } else if (locationURL.state === null) {\n      return '/';\n    } else {\n      return `/movies/`;\n    }\n  };\n\n  useEffect(() => {\n    getMovieDetails(id)\n      .then(data => {\n        setMovie(data);\n        setGenres(data.genres);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, [id]);\n\n  return (\n    <>\n      <MovieDetailsBox>\n        <div>\n          <BackLink to={backLinkHref()}>Go back</BackLink>\n          <img src={getFullPosterURL(movie.poster_path)} alt={movie.title} />\n        </div>\n        <div>\n          <h2>\n            {movie.title} ({movie.release_date?.slice(0, 4)})\n          </h2>\n          {movie.overview}\n          {movie.vote_average > 0 ? <p>User Score: {votePercentage}</p> : null}\n          <h3>Overview</h3>\n          <p>{movie.overview}</p>\n          {genres.length === 1 ? <h3>Genre</h3> : <h3>Genres</h3>}\n          <p>{genres.map(genre => genre.name).join(`, `)}</p>\n        </div>\n      </MovieDetailsBox>\n      <h3>Additional information</h3>\n      <AdditionalInformationBox>\n        <InfoLink to=\"cast\">Cast</InfoLink>\n        <br />\n        <InfoLink to=\"reviews\">Reviews</InfoLink>\n      </AdditionalInformationBox>\n      <Suspense fallback={<Loader />}>\n        {' '}\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n\nMovieDetails.propTypes = {\n  movie: PropTypes.array,\n  genres: PropTypes.array,\n  id: PropTypes.number,\n  locationURL: PropTypes.object,\n  votePercentage: PropTypes.number,\n  backLinkHref: PropTypes.func,\n  getMovieDetails: PropTypes.func,\n};\n","import axios from 'axios';\n\nconst API_KEY = '7968ad8b74212fdec970c8532d70f000';\nconst API_URL = 'https://api.themoviedb.org/3';\n\nconst fetchData = async option => {\n  try {\n    const response = await axios.get(`${API_URL}${option}api_key=${API_KEY}`);\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.log(error.message);\n    throw error;\n  }\n};\n\nconst getData = async option => {\n  try {\n    const data = await fetchData(option);\n    return data;\n  } catch (error) {\n    console.log(error.message);\n    throw error;\n  }\n};\n\nexport const getTrending = () => {\n  const getTrendingURL = '/trending/movie/day?';\n  return getData(getTrendingURL);\n};\n\nexport const searchMovie = movie => {\n  const searchMovieURL = `/search/movie?query=${movie}&`;\n  return getData(searchMovieURL);\n};\n\nexport const getMovieDetails = id => {\n  const getMovieDetailsURL = `/movie/${id}?`;\n  return getData(getMovieDetailsURL);\n};\n\nexport const getMovieCredits = id => {\n  const getMovieCreditsURL = `/movie/${id}/credits?`;\n  return getData(getMovieCreditsURL);\n};\n\nexport const getMovieReviews = id => {\n  const getMovieReviewsURL = `/movie/${id}/reviews?`;\n  return getData(getMovieReviewsURL);\n};\n\nexport const getFullPosterURL = posterPath => {\n  if (!posterPath) {\n    return;\n  }\n  try {\n    const response = `https://image.tmdb.org/t/p/w500${posterPath}`;\n    return response;\n  } catch (error) {\n    return error(error.message);\n  }\n};\n"],"names":["Loader","_jsx","RevolvingDot","radius","strokeWidth","color","secondaryColor","ariaLabel","wrapperStyle","wrapperClass","visible","BackLink","_ref","to","children","BackStyledLink","styled","Link","_templateObject","_taggedTemplateLiteral","MovieDetailsBox","_templateObject2","InfoLink","_ref2","InfoStyledLink","_templateObject3","AdditionalInformationBox","_templateObject4","MovieDetails","_movie$release_date","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","genres","setGenres","id","useParams","locationURL","useLocation","votePercentage","vote_average","toFixed","useEffect","getMovieDetails","then","data","catch","error","console","_jsxs","_Fragment","_locationURL$state","log","state","from","backLinkHref","src","getFullPosterURL","poster_path","alt","title","release_date","slice","overview","length","map","genre","name","join","Suspense","fallback","Outlet","fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","option","response","_context","prev","next","axios","concat","sent","abrupt","t0","message","stop","_x","apply","arguments","getData","_callee2","_context2","_x2","getTrending","searchMovie","searchMovieURL","getMovieDetailsURL","getMovieCredits","getMovieCreditsURL","getMovieReviews","getMovieReviewsURL","posterPath"],"sourceRoot":""}